import comp from "/Users/aleksandrkiselev/Projects/qaspen-python/psqlpy/docs/.vuepress/.temp/pages/components/connection.html.vue"
const data = JSON.parse("{\"path\":\"/components/connection.html\",\"title\":\"Connection\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"Connection\",\"description\":\"Connection object represents single connection to the PostgreSQL. You must work with database within it. Connection get be made with ConnectionPool().connection() method. Connec...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://qaspen-python.github.io/components/connection.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"PSQLPy\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Connection\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"Connection object represents single connection to the PostgreSQL. You must work with database within it. Connection get be made with ConnectionPool().connection() method. Connec...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"en-US\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Connection\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":2,\"title\":\"Connection methods\",\"slug\":\"connection-methods\",\"link\":\"#connection-methods\",\"children\":[{\"level\":3,\"title\":\"Execute\",\"slug\":\"execute\",\"link\":\"#execute\",\"children\":[]},{\"level\":3,\"title\":\"Fetch\",\"slug\":\"fetch\",\"link\":\"#fetch\",\"children\":[]},{\"level\":3,\"title\":\"Execute Many\",\"slug\":\"execute-many\",\"link\":\"#execute-many\",\"children\":[]},{\"level\":3,\"title\":\"Fetch Row\",\"slug\":\"fetch-row\",\"link\":\"#fetch-row\",\"children\":[]},{\"level\":3,\"title\":\"Fetch Val\",\"slug\":\"fetch-val\",\"link\":\"#fetch-val\",\"children\":[]},{\"level\":3,\"title\":\"Transaction\",\"slug\":\"transaction\",\"link\":\"#transaction\",\"children\":[]}]}],\"filePathRelative\":\"components/connection.md\",\"autoDesc\":true,\"excerpt\":\"<p><code>Connection</code> object represents single connection to the <code>PostgreSQL</code>. You must work with database within it.<br>\\n<code>Connection</code> get be made with <code>ConnectionPool().connection()</code> method.</p>\\n<div class=\\\"language-python\\\" data-ext=\\\"py\\\" data-title=\\\"py\\\"><pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">from</span> psqlpy <span class=\\\"token keyword\\\">import</span> ConnectionPool\\n\\n\\ndb_pool<span class=\\\"token punctuation\\\">:</span> Final <span class=\\\"token operator\\\">=</span> ConnectionPool<span class=\\\"token punctuation\\\">(</span>\\n    dsn<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"postgres://postgres:postgres@localhost:5432/postgres\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">)</span>\\n\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">&gt;</span> <span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n    connection <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> db_pool<span class=\\\"token punctuation\\\">.</span>connection<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}

import comp from "/Users/aleksandrkiselev/Projects/qaspen-python/psqlpy/docs/.vuepress/.temp/pages/usage/row_factories/predefined_row_factories.html.vue"
const data = JSON.parse("{\"path\":\"/usage/row_factories/predefined_row_factories.html\",\"title\":\"Predefined row factories\",\"lang\":\"en-US\",\"frontmatter\":{\"title\":\"Predefined row factories\",\"description\":\"We have predefined row_factories for fast usage. tuple_row Instead of dict you can return tuple as a result. class_row You can build class from database result.\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://qaspen-python.github.io/usage/row_factories/predefined_row_factories.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"PSQLPy\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Predefined row factories\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"We have predefined row_factories for fast usage. tuple_row Instead of dict you can return tuple as a result. class_row You can build class from database result.\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"en-US\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Predefined row factories\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[]}\"]]},\"headers\":[{\"level\":3,\"title\":\"tuple_row\",\"slug\":\"tuple-row\",\"link\":\"#tuple-row\",\"children\":[]},{\"level\":3,\"title\":\"class_row\",\"slug\":\"class-row\",\"link\":\"#class-row\",\"children\":[]}],\"filePathRelative\":\"usage/row_factories/predefined_row_factories.md\",\"autoDesc\":true,\"excerpt\":\"<p>We have predefined row_factories for fast usage.</p>\\n<h3>tuple_row</h3>\\n<p>Instead of dict you can return tuple as a result.</p>\\n<div class=\\\"language-python\\\" data-ext=\\\"py\\\" data-title=\\\"py\\\"><pre class=\\\"language-python\\\"><code><span class=\\\"token keyword\\\">from</span> psqlpy<span class=\\\"token punctuation\\\">.</span>row_factories <span class=\\\"token keyword\\\">import</span> tuple_row\\n\\n<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>\\n\\n\\n<span class=\\\"token keyword\\\">async</span> <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">&gt;</span> <span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">:</span>\\n    conn_result <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> psql_pool<span class=\\\"token punctuation\\\">.</span>execute<span class=\\\"token punctuation\\\">(</span>\\n        querystring<span class=\\\"token operator\\\">=</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f\\\"SELECT * FROM </span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>table_name<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\"</span></span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n    tuple_res <span class=\\\"token operator\\\">=</span> conn_result<span class=\\\"token punctuation\\\">.</span>row_factory<span class=\\\"token punctuation\\\">(</span>row_factory<span class=\\\"token operator\\\">=</span>tuple_row<span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">assert</span> <span class=\\\"token builtin\\\">isinstance</span><span class=\\\"token punctuation\\\">(</span>tuple_res<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token builtin\\\">tuple</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
